[
  {
    "id": "TC001",
    "title": "User signup with valid email and password",
    "description": "Verify that a new user can sign up successfully using a valid email address and a secure password.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the signup page"
      },
      {
        "type": "action",
        "description": "Enter a valid email address and a strong password"
      },
      {
        "type": "action",
        "description": "Submit the signup form"
      },
      {
        "type": "assertion",
        "description": "Check that the signup is successful and user is redirected to the authenticated area"
      }
    ]
  },
  {
    "id": "TC002",
    "title": "User signup with invalid email format",
    "description": "Ensure the system rejects signup attempts with invalid email formats and displays an appropriate error message.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the signup page"
      },
      {
        "type": "action",
        "description": "Enter an invalid email address (e.g., 'user@domain') and a valid password"
      },
      {
        "type": "action",
        "description": "Submit the signup form"
      },
      {
        "type": "assertion",
        "description": "Verify that the signup is rejected with an email format validation error displayed"
      }
    ]
  },
  {
    "id": "TC003",
    "title": "User login with correct email/password credentials",
    "description": "Verify that existing users can log in successfully using their registered email and password.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the login page"
      },
      {
        "type": "action",
        "description": "Enter valid registered email and corresponding password"
      },
      {
        "type": "action",
        "description": "Submit the login form"
      },
      {
        "type": "assertion",
        "description": "Verify login succeeds and the user is directed to the home or dashboard page"
      }
    ]
  },
  {
    "id": "TC004",
    "title": "User login with incorrect password",
    "description": "Check that login fails when a correct email is paired with an incorrect password, providing suitable feedback.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the login page"
      },
      {
        "type": "action",
        "description": "Enter valid registered email but incorrect password"
      },
      {
        "type": "action",
        "description": "Submit the login form"
      },
      {
        "type": "assertion",
        "description": "Verify login is rejected and an error notification about authentication failure is shown"
      }
    ]
  },
  {
    "id": "TC005",
    "title": "User login via Google OAuth",
    "description": "Verify successful authentication when using Google OAuth login flow, and access to protected routes afterwards.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the login page"
      },
      {
        "type": "action",
        "description": "Click the 'Sign in with Google' button"
      },
      {
        "type": "action",
        "description": "Select a valid Google account and grant required permissions"
      },
      {
        "type": "assertion",
        "description": "Verify login is successful and user is redirected to authenticated sections with protected routes accessible"
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Access protected route without authentication",
    "description": "Ensure that users who are not authenticated cannot access protected routes and are redirected to login.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Attempt to navigate directly to a protected route URL without logging in"
      },
      {
        "type": "assertion",
        "description": "Confirm redirect to login page and no access to protected content"
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Generate itinerary with valid destination and duration",
    "description": "Test that the AI itinerary generator produces a detailed day-by-day itinerary when provided valid inputs.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as an authenticated user"
      },
      {
        "type": "action",
        "description": "Navigate to the itinerary generation form"
      },
      {
        "type": "action",
        "description": "Input a valid travel destination (e.g., 'Paris') and travel duration (e.g., 5 days)"
      },
      {
        "type": "action",
        "description": "Submit the itinerary request"
      },
      {
        "type": "assertion",
        "description": "Verify that the AI response returns an itinerary with daily plans and activities consistent with input"
      },
      {
        "type": "assertion",
        "description": "Ensure itinerary data is saved and linked to the authenticated user in the database"
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Generate itinerary with invalid duration input",
    "description": "Ensure the system validates input and handles error when a non-integer or negative duration is submitted.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as an authenticated user"
      },
      {
        "type": "action",
        "description": "Navigate to the itinerary generation form"
      },
      {
        "type": "action",
        "description": "Enter a valid destination but invalid duration inputs (e.g., -3, 0, or 'five')"
      },
      {
        "type": "action",
        "description": "Submit the form"
      },
      {
        "type": "assertion",
        "description": "Verify that validation error messages are displayed, preventing submission"
      },
      {
        "type": "assertion",
        "description": "Confirm no API call to AI itinerary service is made when inputs are invalid"
      }
    ]
  },
  {
    "id": "TC009",
    "title": "View itinerary history for authenticated user",
    "description": "Verify that users can view a list of their previously created itineraries accurately.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Log in with an account that has saved itineraries"
      },
      {
        "type": "action",
        "description": "Navigate to the itinerary history page"
      },
      {
        "type": "assertion",
        "description": "Check that the list of past itineraries displays all saved items including titles, dates, and summaries"
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Edit existing itinerary and save changes",
    "description": "Test the ability of the user to update details of a saved itinerary and persist those changes.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Log in and navigate to itinerary history"
      },
      {
        "type": "action",
        "description": "Select an existing itinerary"
      },
      {
        "type": "action",
        "description": "Modify the itinerary details such as days or activities"
      },
      {
        "type": "action",
        "description": "Save the changes"
      },
      {
        "type": "assertion",
        "description": "Verify that the updated itinerary is saved and changes are reflected when viewing it again"
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Delete an itinerary from history",
    "description": "Ensure users can delete itineraries and that deleted records no longer appear in history or retrieval calls.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Log in and go to itinerary history"
      },
      {
        "type": "action",
        "description": "Select an itinerary and initiate the delete action"
      },
      {
        "type": "action",
        "description": "Confirm the deletion"
      },
      {
        "type": "assertion",
        "description": "Check that the itinerary is removed from the history list and backend data store"
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Display itinerary locations on interactive map",
    "description": "Verify that the Google Maps component correctly displays geocoded locations extracted from itinerary details.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open an existing itinerary with multiple destinations"
      },
      {
        "type": "assertion",
        "description": "Check that map markers appear at correct geolocations corresponding to itinerary places"
      },
      {
        "type": "assertion",
        "description": "Verify interactive features such as zoom and pan work properly with loaded map"
      }
    ]
  },
  {
    "id": "TC013",
    "title": "Export itinerary as PDF",
    "description": "Test that an itinerary can be accurately exported and saved as a PDF document, including formatting and content.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Load an itinerary details view"
      },
      {
        "type": "action",
        "description": "Click the export as PDF button"
      },
      {
        "type": "assertion",
        "description": "Verify a PDF file is generated and downloadable"
      },
      {
        "type": "assertion",
        "description": "Open the PDF and confirm day-by-day itinerary details and formatting match the displayed content"
      }
    ]
  },
  {
    "id": "TC014",
    "title": "API rejects invalid itinerary creation data",
    "description": "Confirm backend API validates and rejects malformed or incomplete itinerary creation requests with appropriate errors.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Send itinerary creation API request with missing destination or invalid duration"
      },
      {
        "type": "assertion",
        "description": "Receive HTTP 400 Bad Request with descriptive validation error messages"
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Responsive UI adapts to mobile and desktop screen sizes",
    "description": "Validate that the interface renders correctly and remains usable across various device screen dimensions including mobile and desktop.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Access the app on desktop viewport"
      },
      {
        "type": "assertion",
        "description": "Verify layout is full and components are displayed with correct spacing"
      },
      {
        "type": "action",
        "description": "Resize or switch to mobile viewport"
      },
      {
        "type": "assertion",
        "description": "Confirm responsive adjustments: menus collapse appropriately, text and buttons remain accessible"
      }
    ]
  },
  {
    "id": "TC016",
    "title": "Dark mode toggling and persistence",
    "description": "Ensure the UI supports dark mode switching and remembers user preference across sessions.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Toggle dark mode on from light mode"
      },
      {
        "type": "assertion",
        "description": "Verify UI colors and styles update accordingly reflecting dark mode"
      },
      {
        "type": "action",
        "description": "Reload or restart the application"
      },
      {
        "type": "assertion",
        "description": "Confirm dark mode preference is persisted and UI remains in dark mode"
      }
    ]
  },
  {
    "id": "TC017",
    "title": "Docker deployment environment variable management",
    "description": "Verify that environment variables for frontend and backend are correctly loaded and applied in Docker container deployments.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Deploy application services using Docker Compose with environment config files"
      },
      {
        "type": "assertion",
        "description": "Check that services start without errors and environment specific variables are correctly recognized"
      }
    ]
  },
  {
    "id": "TC018",
    "title": "Backend CORS and security headers configuration",
    "description": "Ensure that backend API responses include appropriate CORS headers and security middleware effects are applied.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Send cross-origin API request from frontend domain"
      },
      {
        "type": "assertion",
        "description": "Verify CORS headers allow requests only from authorized frontend domains"
      },
      {
        "type": "assertion",
        "description": "Check response headers for security policies such as Content-Security-Policy, X-Frame-Options"
      }
    ]
  },
  {
    "id": "TC019",
    "title": "Graceful handling of AI API failures",
    "description": "Simulate failures or timeouts from the GROQ AI API and verify frontend and backend properly handle and notify the user.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Trigger itinerary generation with AI API returning error or timeout"
      },
      {
        "type": "assertion",
        "description": "Backend returns a clean error response with meaningful message"
      },
      {
        "type": "assertion",
        "description": "Frontend displays user-friendly error notification and does not crash"
      }
    ]
  },
  {
    "id": "TC020",
    "title": "Performance: AI itinerary generation response time",
    "description": "Measure the time taken for AI itinerary generation from request submission to result rendering, ensuring it meets acceptable performance benchmarks.",
    "category": "performance",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Submit itinerary generation request with typical input values"
      },
      {
        "type": "assertion",
        "description": "Record elapsed time and verify it is within the application's defined acceptable limits (e.g., under 5 seconds)"
      }
    ]
  }
]
